{"ast":null,"code":"//This file is one -> it have all backend API calls\nconst BASE_URL = \"http://localhost:8081\";\nexport const loginUser = (username, password) => {\n  return fetch(BASE_URL + \"/login\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"username\": username,\n      \"password\": password\n    })\n  });\n};\nexport const getUser = (username, email) => {\n  return fetch(BASE_URL + \"/user?username=\" + username + \"&email=\" + email, {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const registerUser = (name, username, password, cnumber, anumber) => {\n  console.log(\"register user called\" + JSON.stringify({\n    \"name\": name,\n    \"username\": username,\n    \"password\": password,\n    \"cnumber\": cnumber,\n    \"accNo\": anumber\n  }));\n  return fetch(BASE_URL + \"/register\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"name\": name,\n      \"username\": username,\n      \"password\": password,\n      \"cnumber\": cnumber,\n      \"accNo\": anumber\n    })\n  });\n};\nexport const editUsers = (name, username, password, cnumber, anumber) => {\n  console.log(\"register user called\" + JSON.stringify({\n    \"name\": name,\n    \"username\": username,\n    \"password\": password,\n    \"cnumber\": cnumber,\n    \"accNo\": anumber\n  }));\n  return fetch(BASE_URL + \"/editUser?id=\" + localStorage.getItem(\"id\"), {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"name\": name,\n      \"username\": username,\n      \"password\": password,\n      \"cnumber\": cnumber,\n      \"accNo\": anumber\n    })\n  });\n};\nexport const getAllUsers = () => {\n  return fetch(BASE_URL + \"/allUsers\", {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(error => {\n    console.log(\"Error while getAllUsers\");\n  });\n};\nexport const savePayment = (account, amount, type, notes) => {\n  return fetch(BASE_URL + \"/savePayment\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"from\": localStorage.getItem('username'),\n      \"accountNo\": account,\n      \"amount\": amount,\n      \"type\": type,\n      \"notes\": notes,\n      \"userId\": localStorage.getItem('id')\n    })\n  });\n};\nexport const getAllFeeds = type => {\n  return fetch(BASE_URL + \"/all-feeds?type=\" + type + \"&username=\" + localStorage.getItem('username') + \"&email=\" + localStorage.getItem('email'), {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(error => {\n    console.log(\"Error while getAllUsers\");\n  });\n};","map":{"version":3,"sources":["/Users/manish/Desktop/Project413/Payment-BK_FE/Payment-UI/src/util/fetch.js"],"names":["BASE_URL","loginUser","username","password","fetch","method","headers","body","JSON","stringify","getUser","email","registerUser","name","cnumber","anumber","console","log","editUsers","localStorage","getItem","getAllUsers","catch","error","savePayment","account","amount","type","notes","getAllFeeds"],"mappings":"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","sourcesContent":["//This file is one -> it have all backend API calls\r\nconst BASE_URL = \"http://localhost:8081\";\r\n\r\n\r\nexport const loginUser = (username,password) => {\r\n    return fetch(BASE_URL+\"/login\", {\r\n            method: \"POST\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              \"username\":username,\r\n              \"password\":password\r\n              })\r\n          });\r\n}\r\n\r\nexport const getUser = (username,email) => {\r\n  return fetch(BASE_URL+\"/user?username=\"+username+\"&email=\"+email, {\r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\n\r\nexport const registerUser = (name, username,password, cnumber, anumber) => {\r\n  console.log(\"register user called\"+JSON.stringify({\r\n                  \"name\":name,\r\n                  \"username\":username,\r\n                  \"password\":password,\r\n                  \"cnumber\":cnumber,\r\n                  \"accNo\":anumber\r\n                  }));\r\n    return fetch(BASE_URL+\"/register\", {\r\n            method: \"POST\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              \"name\":name,\r\n                  \"username\":username,\r\n                  \"password\":password,\r\n                  \"cnumber\":cnumber,\r\n                  \"accNo\":anumber\r\n              })\r\n          });\r\n}\r\n\r\nexport const editUsers = (name, username,password, cnumber, anumber) => {\r\n  console.log(\"register user called\"+JSON.stringify({\r\n                \"name\":name,\r\n                \"username\":username,\r\n                \"password\":password,\r\n                \"cnumber\":cnumber,\r\n                \"accNo\":anumber\r\n                }));\r\n  return fetch(BASE_URL+\"/editUser?id=\"+localStorage.getItem(\"id\"), {\r\n          method: \"PUT\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n                \"name\":name,\r\n                \"username\":username,\r\n                \"password\":password,\r\n                \"cnumber\":cnumber,\r\n                \"accNo\":anumber\r\n            })\r\n        });\r\n}\r\n\r\nexport const getAllUsers = () => {\r\n    return fetch(BASE_URL+\"/allUsers\", {\r\n            method: \"GET\",\r\n            headers: {'Content-Type': 'application/json'},\r\n          })\r\n          .catch(error=>{\r\n              console.log(\"Error while getAllUsers\");\r\n          })\r\n}\r\n\r\nexport const savePayment = (account, amount,type, notes) => {\r\n  return fetch(BASE_URL+\"/savePayment\", {\r\n       method: \"POST\",\r\n       headers: {'Content-Type': 'application/json'},\r\n       body: JSON.stringify({\r\n                 \"from\":localStorage.getItem('username'),\r\n                 \"accountNo\":account,\r\n                 \"amount\":amount,\r\n                 \"type\":type,\r\n                 \"notes\":notes,\r\n                 \"userId\": localStorage.getItem('id')\r\n                 })\r\n       });\r\n}\r\n\r\n export const getAllFeeds = (type) => {\r\n  return fetch(BASE_URL+\"/all-feeds?type=\"+type+\"&username=\"+localStorage.getItem('username')+\"&email=\"+localStorage.getItem('email'), {\r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error while getAllUsers\");\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}