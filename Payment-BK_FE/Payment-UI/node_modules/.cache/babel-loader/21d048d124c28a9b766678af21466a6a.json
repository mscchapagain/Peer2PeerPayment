{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/Project413/Payment-BK_FE/Payment-UI/src/screens/SendMoney/sendMoney.js\",\n    _s = $RefreshSig$();\n\nimport { Tab, Tabs, Card, CardContent, Typography, CardActions, CardHeader, Button, Grid, FormControl, Input, InputLabel, TextField, InputAdornment, MenuItem, Snackbar } from '@material-ui/core';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport * as React from 'react';\nimport Header from '../../common/header/Header';\nimport './sendMoney.css';\nimport { getAllUsers, savePayment } from '../../util/fetch';\nimport AttachMoneyIcon from '@material-ui/icons/CreditCard';\nimport { createBrowserHistory } from 'history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SendMoney() {\n  _s();\n\n  //This js is to handle send money to users\n  const [value, setValue] = React.useState(1);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const [type, setType] = React.useState('');\n  const [users, setUsers] = React.useState([]);\n  const [user, setUser] = React.useState('');\n  const [amount, setAmount] = React.useState('');\n  const [account, setAccount] = React.useState('');\n  const [notes, setNotes] = React.useState('');\n  const [accountError, setAccountError] = React.useState('');\n\n  if (localStorage.getItem('username') === \"\" || localStorage.getItem('username') === null) {\n    window.location.replace(\"/\");\n    handleLogUser();\n  }\n\n  React.useEffect(() => {\n    getAllUsers().then(res => {\n      let data = res.json();\n      let allUsers = [];\n      data.then(user => {\n        console.log(user);\n        user.map(e => {\n          if (localStorage.getItem('username') !== e.name) {\n            allUsers.push(e.name);\n          }\n        });\n        setUsers(allUsers);\n      });\n    }).catch(error => {\n      console.log(\"Error during get all users failed\" + error);\n    });\n  }, []);\n\n  function handleLogUser() {\n    const history = createBrowserHistory();\n    history.push({\n      pathname: \"/home\"\n    });\n  }\n\n  const handleTypeChange = e => {\n    setType(e.target.value);\n  };\n\n  const handleUserChange = e => {\n    setUser(e.target.value);\n  };\n\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n\n  const handleAccountChange = e => {\n    setAccount(e.target.value);\n  };\n\n  const handleNotesChange = e => {\n    setNotes(e.target.value);\n  };\n\n  const handleSnackClose = () => {\n    setOpenSnack(!openSnack);\n  };\n\n  const sendMoney = () => {\n    if (account === \"\" || account === undefined || amount === \"\" || amount === undefined || type === \"\" || type === undefined || notes === \"\" || notes === undefined) {\n      setSnackMessage('Please fill out this field');\n      setOpenSnack(true);\n    } else {\n      savePayment(account, amount, type, notes).then(res => {\n        res.json().then(data => {\n          console.log(data.error);\n\n          if (data.error === \"Account not found\") {\n            setAccountError('Account number invalid');\n            setSnackMessage('Payment failed!!');\n            setOpenSnack(true);\n          } else if (data.error === \"from & to user cannot be same\") {\n            setAccountError('From & To user cannot be same!');\n            setSnackMessage('Payment failed!!');\n            setOpenSnack(true);\n          } else if (res.status !== 201) {\n            setAccountError('Invalid inputs!');\n            setSnackMessage('Payment failed!!');\n            setOpenSnack(true);\n          } else {\n            setSnackMessage('Payment success!!');\n            setAccountError('');\n            setOpenSnack(true);\n            setAmount('');\n            setAccount('');\n            setNotes('');\n            setType('');\n          }\n        });\n      }).catch(error => {\n        setAccountError('Account number invalid');\n        setSnackMessage('Payment failed!!');\n        setOpenSnack(true);\n      });\n    }\n  };\n\n  const modeOfPay = [{\n    value: 'cash',\n    label: 'cash'\n  }, {\n    value: 'credit card',\n    label: 'credit card'\n  }, {\n    value: 'debit card',\n    label: 'debit card'\n  }];\n\n  const loginHandler = value => {\n    setIsLoggedIn(value);\n  };\n\n  React.useEffect(() => {\n    getLoggedInStatus();\n  }, [value]);\n\n  function getLoggedInStatus() {\n    if (localStorage.getItem(\"username\") !== \"\" && localStorage.getItem(\"username\") !== undefined && localStorage.getItem(\"username\") !== null) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loginHandler: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          marginTop: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              minWidth: 275\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"TRANSFER MONEY\",\n              titleTypographyProps: {\n                variant: 'h4'\n              },\n              subheader: \"Send money to the registered users\",\n              style: {\n                textAlign: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  m: 1\n                },\n                variant: \"standard\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"standard-adornment-amount\",\n                  children: \"Enter Account Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"standard-adornment-amount\",\n                  value: account,\n                  onChange: handleAccountChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold',\n                  color: 'red'\n                },\n                children: accountError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: {\n                  width: '48%'\n                },\n                sx: {\n                  m: 1\n                },\n                variant: \"standard\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"standard-adornment-amount\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"standard-adornment-amount\",\n                  value: amount,\n                  type: \"number\",\n                  onChange: handleAmountChange,\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 9\n              }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(FormControl, {\n                style: {\n                  width: '48%'\n                },\n                sx: {\n                  m: 1\n                },\n                variant: \"standard\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-select-currency\",\n                  select: true,\n                  label: \"Select type\",\n                  value: type,\n                  onChange: handleTypeChange,\n                  helperText: \"Please select your mode of payment\",\n                  children: modeOfPay.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: option.value,\n                    children: option.label\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 13\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                required: true,\n                fullWidth: true,\n                sx: {\n                  m: 1\n                },\n                variant: \"standard\",\n                style: {\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-multiline-static\",\n                  label: \"Notes:\",\n                  multiline: true,\n                  rows: 4 //defaultValue=\"Default Value\"\n                  ,\n                  value: notes,\n                  onChange: handleNotesChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 9\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              style: {\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  justifyContent: 'center'\n                },\n                onClick: sendMoney,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(AttachMoneyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 107\n                }, this), \"\\xA0SEND MONEY\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        style: {\n          whiteSpace: 'pre-wrap',\n          width: '300px',\n          top: '50%',\n          bottom: '50%',\n          left: '40%',\n          right: '50%'\n        },\n        autoHideDuration: 3000,\n        anchorOrigin: {\n          vertical: \"center\",\n          horizontal: \"center\"\n        },\n        open: openSnack,\n        onClose: handleSnackClose,\n        message: snackMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendMoney, \"i+P1ccDyXbXXoN6b4hpKEK/upZg=\");\n\n_c = SendMoney;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMoney\");","map":{"version":3,"sources":["/Users/manish/Desktop/Project413/Payment-BK_FE/Payment-UI/src/screens/SendMoney/sendMoney.js"],"names":["Tab","Tabs","Card","CardContent","Typography","CardActions","CardHeader","Button","Grid","FormControl","Input","InputLabel","TextField","InputAdornment","MenuItem","Snackbar","TabContext","TabPanel","React","Header","getAllUsers","savePayment","AttachMoneyIcon","createBrowserHistory","SendMoney","value","setValue","useState","isLoggedIn","setIsLoggedIn","openSnack","setOpenSnack","snackMessage","setSnackMessage","type","setType","users","setUsers","user","setUser","amount","setAmount","account","setAccount","notes","setNotes","accountError","setAccountError","localStorage","getItem","window","location","replace","handleLogUser","useEffect","then","res","data","json","allUsers","console","log","map","e","name","push","catch","error","history","pathname","handleTypeChange","target","handleUserChange","handleAmountChange","handleAccountChange","handleNotesChange","handleSnackClose","sendMoney","undefined","status","modeOfPay","label","loginHandler","getLoggedInStatus","marginTop","minWidth","variant","textAlign","m","fontWeight","color","width","option","justifyContent","whiteSpace","top","bottom","left","right","vertical","horizontal"],"mappings":"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","sourcesContent":["import { Tab, Tabs, Card, CardContent, Typography, CardActions,CardHeader, Button, Grid, FormControl, Input,\r\n  InputLabel, TextField, InputAdornment, MenuItem, Snackbar} from '@material-ui/core';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport * as React from 'react';\r\nimport Header from '../../common/header/Header';\r\nimport './sendMoney.css';\r\nimport { getAllUsers, savePayment } from '../../util/fetch';\r\nimport AttachMoneyIcon from '@material-ui/icons/CreditCard';\r\nimport { createBrowserHistory } from 'history';\r\nexport default function SendMoney() {\r\n  //This js is to handle send money to users\r\n  const [value, setValue] = React.useState(1);\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [users, setUsers] = React.useState([]);\r\n  const [user, setUser] = React.useState('');\r\n  const [amount, setAmount] = React.useState('');\r\n  const [account, setAccount] = React.useState('');\r\n  const [notes, setNotes] = React.useState('');\r\n  const [accountError, setAccountError] = React.useState('');\r\n  if(localStorage.getItem('username') ===\"\" || localStorage.getItem('username') === null) {\r\n    window.location.replace(\"/\");\r\n     handleLogUser();\r\n  }\r\n  \r\n  React.useEffect(() => {\r\n   \r\n    \r\n    getAllUsers().then(res => {\r\n      let data = res.json();\r\n      let allUsers = [];\r\n      data.then(user => {\r\n        console.log(user);\r\n        user.map(e => {\r\n          if(localStorage.getItem('username') !== e.name ){\r\n            allUsers.push(e.name);\r\n          }\r\n        \r\n        })\r\n        setUsers(allUsers);\r\n      });\r\n    })\r\n      .catch(error => {\r\n        console.log(\"Error during get all users failed\" + error);\r\n      })\r\n  }, []);\r\n\r\n  \r\n\r\n  function handleLogUser() {\r\n    const history = createBrowserHistory();\r\n                  history.push({\r\n                   pathname:\"/home\",\r\n                  });\r\n  }\r\n  const handleTypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleAccountChange = (e) => {\r\n    setAccount(e.target.value);\r\n  };\r\n\r\n  const handleNotesChange = (e) => {\r\n    setNotes(e.target.value);\r\n  };\r\n\r\n  const handleSnackClose = () => {\r\n    setOpenSnack(!openSnack);\r\n  };\r\n\r\n  const sendMoney = () => {\r\n    if (account === \"\" || account === undefined || amount === \"\" || amount === undefined ||\r\n    type === \"\" || type === undefined || notes === \"\"\r\n      || notes === undefined) {\r\n      setSnackMessage('Please fill out this field');\r\n      setOpenSnack(true);\r\n    } else {\r\n      savePayment(account, amount,type, notes ).then(res => {\r\n        res.json().then(data => {\r\n          console.log(data.error);\r\n          if(data.error === \"Account not found\"){\r\n            setAccountError('Account number invalid');\r\n            setSnackMessage('Payment failed!!');\r\n            setOpenSnack(true);\r\n          } else if(data.error === \"from & to user cannot be same\"){\r\n            setAccountError('From & To user cannot be same!');\r\n            setSnackMessage('Payment failed!!');\r\n            setOpenSnack(true);\r\n          } else if(res.status !== 201){\r\n            setAccountError('Invalid inputs!');\r\n            setSnackMessage('Payment failed!!');\r\n            setOpenSnack(true);\r\n          } else {\r\n            setSnackMessage('Payment success!!');\r\n            setAccountError('');\r\n            setOpenSnack(true);\r\n            setAmount('');\r\n            setAccount('');\r\n            setNotes('');\r\n            setType('');\r\n          }\r\n         \r\n        });\r\n      })\r\n        .catch(error => {\r\n          setAccountError('Account number invalid');\r\n          setSnackMessage('Payment failed!!');\r\n          setOpenSnack(true);\r\n        })\r\n    }\r\n  }\r\n\r\n  const modeOfPay = [\r\n    {\r\n      value: 'cash',\r\n      label: 'cash',\r\n    },\r\n    {\r\n      value: 'credit card',\r\n      label: 'credit card',\r\n    },\r\n    {\r\n      value: 'debit card',\r\n      label: 'debit card',\r\n    }\r\n  ];\r\n\r\n  const loginHandler = (value) => {\r\n    setIsLoggedIn(value);\r\n  }\r\n  React.useEffect(() => {\r\n    getLoggedInStatus();\r\n  }, [value]);\r\n\r\n  function getLoggedInStatus() {\r\n    if (localStorage.getItem(\"username\") !== \"\" && localStorage.getItem(\"username\") !== undefined\r\n      && localStorage.getItem(\"username\") !== null) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n     <div >\r\n      <Header loginHandler={loginHandler} />\r\n      \r\n      <Grid container style={{marginTop:'100px'}}>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={8}>\r\n      <Card sx={{ minWidth: 275 }}>\r\n      <CardHeader title={\"TRANSFER MONEY\"} titleTypographyProps={{ variant:'h4' }} subheader=\"Send money to the registered users\" style={{textAlign:\"center\"}}>\r\n        </CardHeader>\r\n      <CardContent>\r\n        \r\n      {/* <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" >\r\n          \r\n          <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"Select user\"\r\n          value={user}\r\n          onChange={handleUserChange}\r\n          helperText=\"Please select user needs to pay\"\r\n        >\r\n          {users.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        </FormControl> */}\r\n        <FormControl  fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-adornment-amount\">Enter Account Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-amount\"\r\n            value={account}\r\n            onChange={handleAccountChange}\r\n          />\r\n          \r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{accountError}</span>\r\n        <br></br><br></br>\r\n        <FormControl  style={{width:'48%'}} sx={{ m: 1 }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-amount\"\r\n            value={amount}\r\n            type=\"number\"\r\n            onChange={handleAmountChange}\r\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n          />\r\n          \r\n        </FormControl>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <FormControl style={{width:'48%'}} sx={{ m: 1 }} variant=\"standard\">\r\n          <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"Select type\"\r\n          value={type}\r\n          onChange={handleTypeChange}\r\n          helperText=\"Please select your mode of payment\"\r\n        >\r\n          {modeOfPay.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n          \r\n        </FormControl>\r\n        <br></br><br></br>\r\n\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Notes:\"\r\n          multiline\r\n          rows={4}\r\n          //defaultValue=\"Default Value\"\r\n           value={notes}\r\n          onChange={handleNotesChange}\r\n        /> </FormControl>\r\n      </CardContent>\r\n      <CardActions style={{justifyContent: 'center'}}>\r\n      <Button variant=\"contained\" style={{justifyContent:'center'}} onClick={sendMoney} color=\"primary\"  ><AttachMoneyIcon/>&nbsp;SEND MONEY</Button>\r\n      </CardActions>\r\n    </Card>\r\n    </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        </Grid>\r\n\r\n        <Snackbar\r\n       style={{whiteSpace: 'pre-wrap', width:'300px', top:'50%',bottom:'50%', left:'40%', right:'50%'}}\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\"\r\n        }}\r\n        open={openSnack}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n      />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}