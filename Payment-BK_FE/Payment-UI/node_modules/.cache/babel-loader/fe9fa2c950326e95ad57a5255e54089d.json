{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/Project413/Payment-BK_FE/Payment-UI/src/screens/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Grid, Input, InputLabel, Snackbar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport * as React from 'react';\nimport { registerUser } from '../../util/fetch';\nimport { getUser, editUsers } from '../../util/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile(_ref) {\n  _s();\n\n  let {\n    toggleModal\n  } = _ref;\n  //This js file is to edit user data and also it have all email/mobilenumber/password validations\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const [emailError, setEmailError] = React.useState('');\n  const [mobileError, setMobileError] = React.useState('');\n  const [cpasswordError, setcPasswordError] = React.useState('');\n  const [invalidError, setInvalidError] = React.useState('');\n  const [snackMessage, setSnackMessage] = React.useState('');\n\n  const passwordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const cpasswordChange = event => {\n    setCPassword(event.target.value);\n  };\n\n  const emailChange = event => {\n    setEmail(event.target.value);\n\n    if (!ValidateEmail(event.target.value)) {\n      setEmailError('Enter valid Email!');\n    } else {\n      setEmailError('');\n    }\n  };\n\n  const nameChange = event => {\n    setName(event.target.value);\n  };\n\n  const cnumberChange = event => {\n    setCnumber(event.target.value);\n\n    if (!phonenumber(event.target.value)) {\n      setMobileError('Enter valid Mobile!');\n    } else {\n      setMobileError('');\n    }\n  };\n\n  const anumberChange = event => {\n    setAnumber(event.target.value);\n  }; //Whenever user clicked profile, below useEffect will trigger to fetch user data \n\n\n  React.useEffect(() => {\n    getUser(localStorage.getItem(\"username\"), localStorage.getItem(\"email\")).then(resp => {\n      resp.json().then(data => {\n        console.log(data);\n        setEmail(data.username);\n        setName(data.name);\n        setCnumber(data.cnumber);\n        setAnumber(data.accNo);\n        setPassword(data.password);\n        setCPassword(data.password);\n        console.log(data);\n      });\n    }).catch(error => {\n      console.log(\"login user err \" + error);\n    });\n  }, []); //Whenever user clicked edit & save, below editUser will trigger to save edited user data\n\n  const editUser = () => {\n    if (email === \"\" || email === undefined || password === \"\" || password === undefined || name === \"\" || name === undefined || cnumber === \"\" || cnumber === undefined || anumber === \"\" || anumber === undefined) {\n      setSnackMessage('Please fill out this field');\n      setOpenSnack(true);\n    } else if (!ValidateEmail(email) || !phonenumber(cnumber)) {\n      return false;\n    } else if (password != cpassword) {\n      setcPasswordError('Password mismatched!');\n      return false;\n    } else {\n      editUsers(name, email, password, cnumber, anumber).then(res => {\n        setSnackMessage('User updated successfully');\n        setOpenSnack(true);\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"username\", name);\n      }).catch(error => {\n        console.log(\"User update failed\" + error);\n        setInvalidError('User update Failed!');\n      });\n    }\n  };\n\n  function ValidateEmail(mail) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function phonenumber(mobile) {\n    var phoneno = /^\\d{10}$/;\n\n    if (mobile.match(phoneno)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const [logButtonName, setlogButtonName] = React.useState(\"LOGIN\");\n\n  const handleSnackClose = () => {\n    setOpenSnack(!openSnack);\n  };\n\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [cpassword, setCPassword] = React.useState(\"\");\n  const [name, setName] = React.useState(\"\");\n  const [cnumber, setCnumber] = React.useState(\"\");\n  const [anumber, setAnumber] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-fname\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-fname\",\n          type: 'text',\n          value: name,\n          defaultValue: name,\n          onChange: nameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-email\",\n          type: 'text',\n          value: email,\n          defaultValue: email,\n          onChange: emailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-password\",\n          type: 'password',\n          value: password,\n          defaultValue: password,\n          onChange: passwordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-password\",\n          type: 'password',\n          value: cpassword,\n          defaultValue: cpassword,\n          onChange: cpasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: 'red'\n        },\n        children: cpasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-cnumber\",\n          children: \"Contact Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-cnumber\",\n          type: 'text',\n          value: cnumber,\n          defaultValue: cnumber,\n          onChange: cnumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: 'red'\n        },\n        children: mobileError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-cnumber\",\n          children: \"Account Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-cnumber\",\n          type: 'text',\n          value: anumber,\n          defaultValue: anumber,\n          onChange: anumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: editUser,\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      style: {\n        whiteSpace: 'pre-wrap',\n        width: '300px',\n        top: '50%',\n        bottom: '50%',\n        left: '40%',\n        right: '50%'\n      },\n      autoHideDuration: 3000,\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"center\"\n      },\n      open: openSnack,\n      onClose: handleSnackClose,\n      message: snackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"O/MqA72cHfdIldWYzcNOfkEBeac=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/manish/Desktop/Project413/Payment-BK_FE/Payment-UI/src/screens/profile/Profile.js"],"names":["FormControl","Grid","Input","InputLabel","Snackbar","Button","DialogActions","DialogContent","React","registerUser","getUser","editUsers","Profile","toggleModal","openSnack","setOpenSnack","useState","emailError","setEmailError","mobileError","setMobileError","cpasswordError","setcPasswordError","invalidError","setInvalidError","snackMessage","setSnackMessage","passwordChange","event","setPassword","target","value","cpasswordChange","setCPassword","emailChange","setEmail","ValidateEmail","nameChange","setName","cnumberChange","setCnumber","phonenumber","anumberChange","setAnumber","useEffect","localStorage","getItem","then","resp","json","data","console","log","username","name","cnumber","accNo","password","catch","error","editUser","email","undefined","anumber","cpassword","res","setItem","mail","test","mobile","phoneno","match","logButtonName","setlogButtonName","handleSnackClose","m","textAlign","fontWeight","color","whiteSpace","width","top","bottom","left","right","vertical","horizontal"],"mappings":"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","sourcesContent":["import {\r\n  FormControl, Grid, Input,\r\n  InputLabel, Snackbar\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport * as React from 'react';\r\nimport { registerUser } from '../../util/fetch';\r\nimport { getUser, editUsers } from '../../util/fetch';\r\nexport default function Profile({ toggleModal }) {\r\n\r\n  //This js file is to edit user data and also it have all email/mobilenumber/password validations\r\n\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const [emailError, setEmailError] = React.useState('');\r\n  const [mobileError, setMobileError] = React.useState('');\r\n  const [cpasswordError, setcPasswordError] = React.useState('');\r\n  const [invalidError, setInvalidError] = React.useState('');\r\n  const [snackMessage, setSnackMessage] = React.useState('');\r\n  const passwordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  const cpasswordChange = (event) => {\r\n    setCPassword(event.target.value);\r\n  }\r\n\r\n  const emailChange = (event) => {\r\n    setEmail(event.target.value);\r\n    if (!ValidateEmail(event.target.value)) {\r\n      setEmailError('Enter valid Email!');\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n  }\r\n\r\n  const nameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n \r\n  const cnumberChange = (event) => {\r\n    setCnumber(event.target.value);\r\n    if (!phonenumber(event.target.value)) {\r\n      setMobileError('Enter valid Mobile!');\r\n    } else {\r\n      setMobileError('');\r\n    }\r\n  }\r\n\r\n  const anumberChange = (event) => {\r\n    setAnumber(event.target.value);\r\n    \r\n  }\r\n\r\n  //Whenever user clicked profile, below useEffect will trigger to fetch user data \r\n  React.useEffect(() => {\r\n    getUser( localStorage.getItem(\"username\"), localStorage.getItem(\"email\")).then(resp => {\r\n      resp.json().then(data => {\r\n        console.log(data);\r\n        setEmail(data.username);\r\n        setName(data.name);\r\n        setCnumber(data.cnumber);\r\n        setAnumber(data.accNo);\r\n        setPassword(data.password);\r\n        setCPassword(data.password);\r\n        console.log(data);\r\n      });\r\n    }).catch(error => {\r\n      console.log(\"login user err \" + error);\r\n    });\r\n  }, []);\r\n\r\n  //Whenever user clicked edit & save, below editUser will trigger to save edited user data\r\n  const editUser = () => {\r\n    if (email === \"\" || email === undefined || password === \"\" || password === undefined ||\r\n      name === \"\" || name === undefined || cnumber === \"\"\r\n      || cnumber === undefined || anumber === \"\"\r\n      || anumber === undefined) {\r\n      setSnackMessage('Please fill out this field');\r\n      setOpenSnack(true);\r\n    } else if (!ValidateEmail(email) || !phonenumber(cnumber)) {\r\n      return false;\r\n    } else if (password != cpassword) {\r\n      setcPasswordError('Password mismatched!');\r\n      return false;\r\n    } else {\r\n      editUsers(name, email, password, cnumber, anumber).then(res => {\r\n        setSnackMessage('User updated successfully');\r\n        setOpenSnack(true);\r\n        localStorage.setItem(\"email\", email);\r\n        localStorage.setItem(\"username\", name);\r\n      })\r\n        .catch(error => {\r\n          console.log(\"User update failed\" + error);\r\n          setInvalidError('User update Failed!');\r\n        })\r\n    }\r\n  }\r\n\r\n  function ValidateEmail(mail) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\r\n      return (true)\r\n    }\r\n    return (false)\r\n  }\r\n\r\n  function phonenumber(mobile) {\r\n    var phoneno = /^\\d{10}$/;\r\n    if (mobile.match(phoneno)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const [logButtonName, setlogButtonName] = React.useState(\"LOGIN\");\r\n\r\n  const handleSnackClose = () => {\r\n    setOpenSnack(!openSnack);\r\n  };\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [cpassword, setCPassword] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [cnumber, setCnumber] = React.useState(\"\");\r\n  const [anumber, setAnumber] = React.useState(\"\");\r\n  return (\r\n    <React.Fragment>\r\n      <DialogContent>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-fname\">Name</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-fname\"\r\n            type={'text'}\r\n            value={name}\r\n            defaultValue={name}\r\n            onChange={nameChange}\r\n          />\r\n        </FormControl><br></br><br></br>\r\n        \r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-email\"\r\n            type={'text'}\r\n            value={email}\r\n            defaultValue={email}\r\n            onChange={emailChange}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{emailError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={'password'}\r\n            value={password}\r\n            defaultValue={password}\r\n            onChange={passwordChange}\r\n          />\r\n        </FormControl>\r\n        <br></br><br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Confirm Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={'password'}\r\n            value={cpassword}\r\n            defaultValue={cpassword}\r\n            onChange={cpasswordChange}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{cpasswordError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Contact Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={cnumber}\r\n            defaultValue={cnumber}\r\n            onChange={cnumberChange}\r\n          />\r\n        </FormControl><br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{mobileError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Account Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={anumber}\r\n            defaultValue={anumber}\r\n            onChange={anumberChange}\r\n          />\r\n        </FormControl><br></br>\r\n      </DialogContent>\r\n      <DialogActions align='center'>\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={editUser} >SAVE</Button>\r\n        </Grid>\r\n      </DialogActions>\r\n\r\n      <Snackbar\r\n       style={{whiteSpace: 'pre-wrap', width:'300px', top:'50%',bottom:'50%', left:'40%', right:'50%'}}\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\"\r\n        }}\r\n        open={openSnack}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}