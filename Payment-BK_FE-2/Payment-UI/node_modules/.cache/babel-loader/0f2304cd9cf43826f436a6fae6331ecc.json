{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Grid, Input, InputLabel, Snackbar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport * as React from 'react';\nimport { loginUser } from '../../util/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    toggleModal,\n    loginButton\n  } = _ref;\n  //This js file is to handle login user related design & backend API calls\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const [lusername, setLUsername] = React.useState(\"\");\n  const [lpassword, setLPassword] = React.useState(\"\");\n  const [invalidError, setInvalidError] = React.useState('');\n\n  const handleSnackClose = () => {\n    setOpenSnack(!openSnack);\n  };\n\n  const lpasswordChange = event => {\n    setLPassword(event.target.value);\n  };\n\n  const lusernameChange = event => {\n    setLUsername(event.target.value);\n  }; //This method is to call backend, once all validations success\n\n\n  const clickLogin = () => {\n    if (lusername === \"\" || lusername === undefined || lpassword === \"\" || lpassword === undefined) {\n      setOpenSnack(true);\n    } else {\n      loginUser(lusername, lpassword).then(resp => {\n        resp.json().then(data => {\n          console.log(data);\n\n          if (data !== null && data.username !== undefined && data.username !== \"\" && data.username !== \"undefined\" && data.username !== null) {\n            localStorage.setItem(\"email\", data.username);\n            localStorage.setItem(\"username\", data.name);\n            localStorage.setItem(\"id\", data._id);\n            loginButton(\"LOGOUT\");\n            toggleModal();\n          } else {\n            setInvalidError('Invalid credentials!');\n          }\n        });\n      }).catch(error => {\n        console.log(\"login user err \" + error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-lusername\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-lusername\",\n          type: 'text',\n          defaultValue: lusername,\n          onBlur: lusernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        sx: {\n          m: 1\n        },\n        variant: \"standard\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-lpassword\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-lpassword\",\n          type: 'password',\n          defaultValue: lpassword,\n          onBlur: lpasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: 'red'\n        },\n        children: invalidError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: clickLogin,\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      style: {\n        whiteSpace: 'pre-wrap',\n        width: '300px',\n        top: '50%',\n        bottom: '50%',\n        left: '40%',\n        right: '50%'\n      },\n      autoHideDuration: 1300,\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"center\"\n      },\n      open: openSnack,\n      onClose: handleSnackClose,\n      message: \"Please fill out this field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"gWFRskmWHmZaf9ZCDsIAYODG34k=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/login/Login.js"],"names":["FormControl","Grid","Input","InputLabel","Snackbar","Button","DialogActions","DialogContent","React","loginUser","Login","toggleModal","loginButton","openSnack","setOpenSnack","useState","lusername","setLUsername","lpassword","setLPassword","invalidError","setInvalidError","handleSnackClose","lpasswordChange","event","target","value","lusernameChange","clickLogin","undefined","then","resp","json","data","console","log","username","localStorage","setItem","name","_id","catch","error","m","textAlign","fontWeight","color","whiteSpace","width","top","bottom","left","right","vertical","horizontal"],"mappings":"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","sourcesContent":["import {\r\n  FormControl, Grid, Input,\r\n  InputLabel, Snackbar\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport * as React from 'react';\r\nimport { loginUser } from '../../util/fetch';\r\n\r\nexport default function Login({ toggleModal, loginButton }) {\r\n\r\n\r\n  //This js file is to handle login user related design & backend API calls\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const [lusername, setLUsername] = React.useState(\"\");\r\n  const [lpassword, setLPassword] = React.useState(\"\");\r\n  const [invalidError, setInvalidError] = React.useState('');\r\n\r\n  const handleSnackClose = () => {\r\n    setOpenSnack(!openSnack);\r\n  };\r\n  const lpasswordChange = (event) => {\r\n    setLPassword(event.target.value);\r\n  }\r\n\r\n  const lusernameChange = (event) => {\r\n    setLUsername(event.target.value);\r\n  }\r\n\r\n  //This method is to call backend, once all validations success\r\n  const clickLogin = () => {\r\n    if (lusername === \"\" || lusername === undefined || lpassword === \"\" || lpassword === undefined) {\r\n      setOpenSnack(true);\r\n    } else {\r\n      loginUser(lusername, lpassword).then(resp => {\r\n        resp.json().then(data => {\r\n          console.log(data);\r\n          \r\n          if (data!== null && data.username !== undefined && data.username !== \"\" && data.username !== \"undefined\"\r\n            && data.username !== null) {\r\n              localStorage.setItem(\"email\", data.username);\r\n            localStorage.setItem(\"username\", data.name);\r\n            localStorage.setItem(\"id\", data._id);\r\n            loginButton(\"LOGOUT\");\r\n            toggleModal();\r\n            \r\n          } else {\r\n            setInvalidError('Invalid credentials!');\r\n          }\r\n        });\r\n      }).catch(error => {\r\n        console.log(\"login user err \" + error);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DialogContent>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-lusername\">Email</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-lusername\"\r\n            type={'text'}\r\n            defaultValue={lusername}\r\n            onBlur={lusernameChange}\r\n          />\r\n        </FormControl><br></br><br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-lpassword\">Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-lpassword\"\r\n            type={'password'}\r\n            defaultValue={lpassword}\r\n            onBlur={lpasswordChange}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{invalidError}</span>\r\n\r\n      </DialogContent>\r\n      <DialogActions align='center'>\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={clickLogin}>LOGIN</Button>\r\n          <br></br>\r\n        </Grid>\r\n      </DialogActions>\r\n\r\n      <Snackbar\r\n         style={{whiteSpace: 'pre-wrap', width:'300px', top:'50%',bottom:'50%', left:'40%', right:'50%'}}\r\n        autoHideDuration={1300}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\"\r\n        }}\r\n        open={openSnack}\r\n        onClose={handleSnackClose}\r\n        message=\"Please fill out this field\"\r\n      />\r\n\r\n    </React.Fragment>\r\n\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}