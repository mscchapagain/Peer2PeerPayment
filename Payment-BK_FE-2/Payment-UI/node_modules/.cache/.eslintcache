[{"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/index.js":"1","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/reportWebVitals.js":"2","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/Controller.js":"3","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/feed/Feed.js":"4","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/home/Home.js":"5","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/SendMoney/sendMoney.js":"6","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/util/fetch.js":"7","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/common/header/Header.js":"8","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/login/Login.js":"9","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/register/Register.js":"10","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/profile/Profile.js":"11","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/profile/ViewProfile.js":"12"},{"size":478,"mtime":1651132112000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1628593462000,"results":"15","hashOfConfig":"14"},{"size":841,"mtime":1651176694000,"results":"16","hashOfConfig":"14"},{"size":5969,"mtime":1652045400000,"results":"17","hashOfConfig":"14"},{"size":7576,"mtime":1652045428000,"results":"18","hashOfConfig":"14"},{"size":8240,"mtime":1652045728000,"results":"19","hashOfConfig":"14"},{"size":3205,"mtime":1652045792000,"results":"20","hashOfConfig":"14"},{"size":8116,"mtime":1652045050000,"results":"21","hashOfConfig":"14"},{"size":3642,"mtime":1652045496000,"results":"22","hashOfConfig":"14"},{"size":7039,"mtime":1652047008000,"results":"23","hashOfConfig":"14"},{"size":7941,"mtime":1652045636000,"results":"24","hashOfConfig":"14"},{"size":3426,"mtime":1652045672000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xywnsq",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/index.js",[],"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/reportWebVitals.js",[],"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/Controller.js",[],"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/feed/Feed.js",["57","58","59","60","61","62","63","64","65","66","67","68","69"],"import { Tab, Tabs, Card, CardContent, Typography, CardActions,CardHeader, Button, Grid, FormControl, Input,\r\n  InputLabel, TextField, IconButton, InputAdornment, MenuItem, Snackbar, Avatar} from '@material-ui/core';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport * as React from 'react';\r\nimport Header from '../../common/header/Header';\r\nimport { getAllFeeds } from '../../util/fetch';\r\nimport './Feed.css';\r\nimport AccessTime  from '@material-ui/icons/AccessTime';\r\nimport MonetizationOn  from '@material-ui/icons/LocalAtm';\r\nimport Payment  from '@material-ui/icons/Payment';\r\nimport men from '../../assets/men.png';\r\nimport transfer from '../../assets/transfer1.png';\r\nexport default function Feed() {\r\n\r\n  //This js file is to handle all payments history -> to fetch based on type like SEND / RECIEVE  \r\n\r\n  const [value, setValue] = React.useState(1);\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n  const [feeds, setFeeds] = React.useState([]);\r\n  const loginHandler = (value) => {\r\n    setIsLoggedIn(value);\r\n  }\r\n\r\n  //This blocks is React.useEffect to  trigger during page loading\r\n  React.useEffect(() => {\r\n    getLoggedInStatus();\r\n   \r\n  }, [1]);\r\n\r\n  function getLoggedInStatus() {\r\n    if (localStorage.getItem(\"username\") !== \"\" && localStorage.getItem(\"username\") !== undefined\r\n      && localStorage.getItem(\"username\") !== null) {\r\n      setIsLoggedIn(true);\r\n      getAllFeeds(\"SEND\").then(res => {\r\n        let data = res.json();\r\n        data.then(feeds => {\r\n          console.log(feeds);\r\n          setFeeds(feeds);\r\n        });\r\n      })\r\n        .catch(error => {\r\n          console.log(\"Error during get all users failed\" + error);\r\n        })\r\n    } else {\r\n      setIsLoggedIn(false);\r\n      window.location.replace(\"/\");\r\n    }\r\n  }\r\n\r\n  //Below method is to get transaction data based on user action like SEND PAYMENTS or RECEIVE PAYMENTS\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    if(newValue===1){\r\n      getAllFeeds(\"SEND\").then(res => {\r\n        let data = res.json();\r\n        data.then(feeds => {\r\n          console.log(feeds);\r\n          setFeeds(feeds);\r\n        });\r\n      })\r\n        .catch(error => {\r\n          console.log(\"Error during get all users failed\" + error);\r\n        })\r\n    } else {\r\n      getAllFeeds(\"RECIEVE\").then(res => {\r\n        let data = res.json();\r\n        data.then(feeds => {\r\n          console.log(feeds);\r\n          setFeeds(feeds);\r\n        });\r\n      })\r\n        .catch(error => {\r\n          console.log(\"Error during get all users failed\" + error);\r\n        })\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <div >\r\n      <Header loginHandler={loginHandler} />\r\n      <TabContext value={value}>\r\n              <Tabs  variant=\"fullWidth\" value={value} onChange={handleChange} style={{ textAlign: 'center' }} fullWidth>\r\n                <Tab label=\"SEND PAYMENTS\" value={1}  />\r\n                <Tab label=\"RECEIVE PAYMENTS\" value={2} />\r\n              </Tabs>\r\n\r\n              <TabPanel value={1} index={0}>\r\n                  \r\n              </TabPanel>\r\n\r\n              <TabPanel value={2} index={1}>\r\n              </TabPanel>\r\n\r\n      </TabContext>\r\n\r\n      <Grid container style={{marginTop:'10px'}}>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={8}>\r\n          \r\n    {feeds.length > 0 ? (feeds.map((each, index) => (\r\n      <>\r\n      <Card sx={{ minWidth: 275 }} key={index} >\r\n      <CardContent>\r\n      <Grid container>\r\n      <Grid item xs={5}>\r\n        <IconButton>\r\n        <Avatar \r\n          src={men}\r\n          style={{\r\n            margin: \"10px\",\r\n            width: \"60px\",\r\n            height: \"60px\",\r\n          }} \r\n          /> \r\n          <Typography variant=\"h5\" style={{color: 'orange', fontFamily:'sans-serif'}} >\r\n          {each.from}\r\n        </Typography>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item xs={2} style={{alignItems:'center'}}>\r\n      <img src={transfer} style={{height:'80px', marginLeft:'30px'}}></img>\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <div  style={{float:'right'}}>\r\n        <IconButton >\r\n        <Avatar \r\n          src={men}\r\n          style={{\r\n            margin: \"10px\",\r\n            width: \"60px\",\r\n            height: \"60px\"\r\n          }} \r\n          /> \r\n          <Typography variant=\"h5\" style={{color: 'orange', fontFamily:'sans-serif'}} >\r\n          {each.to}\r\n        </Typography>\r\n        </IconButton>\r\n        \r\n        </div>\r\n      </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n      <Grid item xs={12}>\r\n      <Typography variant=\"subtitle2\" style={{fontFamily:'sans-serif'}} >\r\n      {each.notes}\r\n      </Typography>\r\n      </Grid>\r\n      \r\n      </Grid>\r\n      <br></br><br></br>\r\n      <Grid container>\r\n      <Grid item xs={4}> \r\n      <div style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  flexWrap: 'wrap',\r\n              }}><AccessTime />&nbsp;<span>{each.date}</span>\r\n        </div>      \r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={4} style={{alignItems:'center'}}> \r\n      <div style={{\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                  justifyContent: 'center'\r\n              }}><Payment />&nbsp;<span>{each.type}</span>\r\n        </div>      \r\n        </Grid>\r\n\r\n        <Grid item xs={4}> \r\n      <div style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  flexWrap: 'wrap',\r\n                  float:'right'\r\n              }}><MonetizationOn />&nbsp;<span>{each.amount}</span>\r\n        </div>      \r\n        </Grid>\r\n      </Grid>\r\n      </CardContent>\r\n    </Card>\r\n    <br></br>\r\n    </>\r\n    ))):<p style={{textAlign:'center'}}><font color={'red'}>No Record found</font></p>}\r\n    </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        </div>\r\n    </React.Fragment>\r\n  );\r\n}","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/home/Home.js",["70","71","72","73","74","75","76","77","78"],"import { Tab, Tabs } from '@material-ui/core';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport * as React from 'react';\r\nimport Header from '../../common/header/Header';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Home.css';\r\nimport { AccessAlarm } from '@material-ui/icons';\r\nimport AccessTime  from '@material-ui/icons/AccessTime';\r\nimport cashPay from '../../assets/cash_payment.jpg';\r\nimport payment from '../../assets/payment.png';\r\nimport CreditCard  from '@material-ui/icons/Payment';\r\nimport AccountBalanceWallet  from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nexport default function Home() {\r\n\r\n  //This js is home page, contains static data\r\n\r\n  const [value, setValue] = React.useState(1);\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n  const loginHandler = (value) => {\r\n    setIsLoggedIn(value);\r\n  }\r\n  React.useEffect(() => {\r\n    getLoggedInStatus();\r\n  }, [value]);\r\n\r\n  function getLoggedInStatus() {\r\n    if (localStorage.getItem(\"username\") !== \"\" && localStorage.getItem(\"username\") !== undefined\r\n      && localStorage.getItem(\"username\") !== null) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header loginHandler={loginHandler} />\r\n      <section className=\"header relative pt-16 items-center flex h-screen max-h-860-px\">\r\n        <div className=\"container mx-auto items-center flex flex-wrap\">\r\n          <div className=\"w-full md:w-8/12 lg:w-6/12 xl:w-6/12 px-4\">\r\n            <div className=\"pt-32 sm:pt-0\">\r\n              <h2 className=\"font-semibold text-4xl text-blueGray-600\">\r\n                Payment App - Money transfer to anyone.\r\n              </h2>\r\n              <p className=\"mt-4 text-lg leading-relaxed text-blueGray-500\">\r\n                We can pay any of the registered user and accept credit cards, debit cards, cash. Also we can see all registered users feed\r\n              </p>\r\n              <div className=\"mt-12\">\r\n                \r\n                {/* <Link to=\"/feed\" className=\"get-started text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-lightBlue-500 active:bg-lightBlue-600 uppercase text-sm shadow hover:shadow-lg ease-linear transition-all duration-150\">\r\n                    Check the feeds\r\n                  </Link> */}\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <img\r\n          className=\"absolute top-0 b-auto right-0 pt-16 sm:w-6/12 -mt-48 sm:mt-0 w-10/12 max-h-860px\"\r\n          //src={require(\"../../assets/img/pattern_react.png\").default}\r\n          src={payment}\r\n          alt=\"...\"\r\n        />\r\n      </section>\r\n\r\n      <section className=\"mt-48 md:mt-40 pb-40 relative bg-blueGray-100\">\r\n        <div\r\n          className=\"-mt-20 top-0 bottom-auto left-0 right-0 w-full absolute h-20\"\r\n          style={{ transform: \"translateZ(0)\" }}\r\n        >\r\n          <svg\r\n            className=\"absolute bottom-0 overflow-hidden\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            preserveAspectRatio=\"none\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 2560 100\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n          >\r\n            <polygon\r\n              className=\"text-blueGray-100 fill-current\"\r\n              points=\"2560 0 2560 100 0 100\"\r\n            ></polygon>\r\n          </svg>\r\n        </div>\r\n        <div className=\"container mx-auto\">\r\n          <div className=\"flex flex-wrap items-center\">\r\n            <div className=\"w-10/12 md:w-6/12 lg:w-4/12 px-12 md:px-4 mr-auto ml-auto -mt-32\">\r\n              <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded-lg bg-lightBlue-500\">\r\n                <img\r\n                  alt=\"...\"\r\n                  src={cashPay}\r\n                  className=\"w-full align-middle rounded-t-lg\"\r\n                />\r\n                <blockquote className=\"relative p-8 mb-4\">\r\n                  <svg\r\n                    preserveAspectRatio=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 583 95\"\r\n                    className=\"absolute left-0 w-full block h-95-px -top-94-px\"\r\n                  >\r\n                    <polygon\r\n                      points=\"-30,95 583,95 583,65\"\r\n                      className=\"text-lightBlue-500 fill-current\"\r\n                    ></polygon>\r\n                  </svg>\r\n                  <h4 className=\"text-xl font-bold text-white\">\r\n                    Payment modes\r\n                  </h4>\r\n                  <p className=\"text-md font-light mt-2 text-white\">\r\n                    We can transfer money to anybody who already registered here. Just few clicks, payment done. \r\n                  </p>\r\n                </blockquote>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"w-full md:w-6/12 px-4\">\r\n              <div className=\"flex flex-wrap\">\r\n                <div className=\"w-full md:w-6/12 px-4\">\r\n                  <div className=\"relative flex flex-col mt-4\">\r\n                    <div className=\"px-4 py-5 flex-auto\">\r\n                      <div className=\"text-blueGray-500 p-3 text-center inline-flex items-center justify-center w-12 h-12 mb-5 shadow-lg rounded-full bg-white\">\r\n                        <AccountBalanceWallet/>\r\n                      </div>\r\n                      <h6 className=\"text-xl mb-1 font-semibold\">\r\n                        Pay via Cash\r\n                      </h6>\r\n                      <p className=\"mb-4 text-blueGray-500\">\r\n                        We accept cash, just use cash option to send money.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"relative flex flex-col min-w-0\">\r\n                    <div className=\"px-4 py-5 flex-auto\">\r\n                      <div className=\"text-blueGray-500 p-3 text-center inline-flex items-center justify-center w-12 h-12 mb-5 shadow-lg rounded-full bg-white\">\r\n                        <CreditCard/>\r\n                      </div>\r\n                      <h6 className=\"text-xl mb-1 font-semibold\">\r\n                      Pay via Credit cards\r\n                      </h6>\r\n                      <p className=\"mb-4 text-blueGray-500\">\r\n                      We accept credit cards, just use cash option to send money.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-full md:w-6/12 px-4\">\r\n                  \r\n                  <div className=\"relative flex flex-col min-w-0\">\r\n                    <div className=\"px-4 py-5 flex-auto\">\r\n                      <div className=\"text-blueGray-500 p-3 text-center inline-flex items-center justify-center w-12 h-12 mb-5 shadow-lg rounded-full bg-white\">\r\n                      <CreditCard/>\r\n                      </div>\r\n                      <h6 className=\"text-xl mb-1 font-semibold\">\r\n                      Pay via Debit cards\r\n                      </h6>\r\n                      <p className=\"mb-4 text-blueGray-500\">\r\n                      We accept debit cards, just use cash option to send money.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n       \r\n      </section>\r\n\r\n    </React.Fragment>\r\n  );\r\n}","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/SendMoney/sendMoney.js",["79","80","81","82","83","84","85","86","87","88","89"],"import { Tab, Tabs, Card, CardContent, Typography, CardActions,CardHeader, Button, Grid, FormControl, Input,\r\n  InputLabel, TextField, InputAdornment, MenuItem, Snackbar} from '@material-ui/core';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport * as React from 'react';\r\nimport Header from '../../common/header/Header';\r\nimport './sendMoney.css';\r\nimport { getAllUsers, savePayment } from '../../util/fetch';\r\nimport AttachMoneyIcon from '@material-ui/icons/CreditCard';\r\nimport { createBrowserHistory } from 'history';\r\nexport default function SendMoney() {\r\n  //This js is to handle send money to users\r\n  const [value, setValue] = React.useState(1);\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [users, setUsers] = React.useState([]);\r\n  const [user, setUser] = React.useState('');\r\n  const [amount, setAmount] = React.useState('');\r\n  const [account, setAccount] = React.useState('');\r\n  const [notes, setNotes] = React.useState('');\r\n  const [accountError, setAccountError] = React.useState('');\r\n  if(localStorage.getItem('username') ===\"\" || localStorage.getItem('username') === null) {\r\n    window.location.replace(\"/\");\r\n     handleLogUser();\r\n  }\r\n  \r\n  React.useEffect(() => {\r\n   \r\n    \r\n    getAllUsers().then(res => {\r\n      let data = res.json();\r\n      let allUsers = [];\r\n      data.then(user => {\r\n        console.log(user);\r\n        user.map(e => {\r\n          if(localStorage.getItem('username') !== e.name ){\r\n            allUsers.push(e.name);\r\n          }\r\n        \r\n        })\r\n        setUsers(allUsers);\r\n      });\r\n    })\r\n      .catch(error => {\r\n        console.log(\"Error during get all users failed\" + error);\r\n      })\r\n  }, []);\r\n\r\n  \r\n\r\n  function handleLogUser() {\r\n    const history = createBrowserHistory();\r\n                  history.push({\r\n                   pathname:\"/home\",\r\n                  });\r\n  }\r\n  const handleTypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleAccountChange = (e) => {\r\n    setAccount(e.target.value);\r\n  };\r\n\r\n  const handleNotesChange = (e) => {\r\n    setNotes(e.target.value);\r\n  };\r\n\r\n  const handleSnackClose = () => {\r\n    setOpenSnack(!openSnack);\r\n  };\r\n\r\n  const sendMoney = () => {\r\n    if (account === \"\" || account === undefined || amount === \"\" || amount === undefined ||\r\n    type === \"\" || type === undefined || notes === \"\"\r\n      || notes === undefined) {\r\n      setSnackMessage('Please fill out this field');\r\n      setOpenSnack(true);\r\n    } else {\r\n      savePayment(account, amount,type, notes ).then(res => {\r\n        res.json().then(data => {\r\n          console.log(data.error);\r\n          if(data.error === \"Account not found\"){\r\n            setAccountError('Account number invalid');\r\n            setSnackMessage('Payment failed!!');\r\n            setOpenSnack(true);\r\n          } else if(data.error === \"from & to user cannot be same\"){\r\n            setAccountError('From & To user cannot be same!');\r\n            setSnackMessage('Payment failed!!');\r\n            setOpenSnack(true);\r\n          } else {\r\n            setSnackMessage('Payment success!!');\r\n            setAccountError('');\r\n            setOpenSnack(true);\r\n            setAmount('');\r\n            setAccount('');\r\n            setNotes('');\r\n            setType('');\r\n          }\r\n         \r\n        });\r\n      })\r\n        .catch(error => {\r\n          setAccountError('Account number invalid');\r\n          setSnackMessage('Payment failed!!');\r\n          setOpenSnack(true);\r\n        })\r\n    }\r\n  }\r\n\r\n  const modeOfPay = [\r\n    {\r\n      value: 'cash',\r\n      label: 'cash',\r\n    },\r\n    {\r\n      value: 'credit card',\r\n      label: 'credit card',\r\n    },\r\n    {\r\n      value: 'debit card',\r\n      label: 'debit card',\r\n    }\r\n  ];\r\n\r\n  const loginHandler = (value) => {\r\n    setIsLoggedIn(value);\r\n  }\r\n  React.useEffect(() => {\r\n    getLoggedInStatus();\r\n  }, [value]);\r\n\r\n  function getLoggedInStatus() {\r\n    if (localStorage.getItem(\"username\") !== \"\" && localStorage.getItem(\"username\") !== undefined\r\n      && localStorage.getItem(\"username\") !== null) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n     <div >\r\n      <Header loginHandler={loginHandler} />\r\n      \r\n      <Grid container style={{marginTop:'100px'}}>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={8}>\r\n      <Card sx={{ minWidth: 275 }}>\r\n      <CardHeader title={\"TRANSFER MONEY\"} titleTypographyProps={{ variant:'h4' }} subheader=\"Send money to the registered users\" style={{textAlign:\"center\"}}>\r\n        </CardHeader>\r\n      <CardContent>\r\n        \r\n      {/* <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" >\r\n          \r\n          <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"Select user\"\r\n          value={user}\r\n          onChange={handleUserChange}\r\n          helperText=\"Please select user needs to pay\"\r\n        >\r\n          {users.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        </FormControl> */}\r\n        <FormControl  fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-adornment-amount\">Enter Account Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-amount\"\r\n            value={account}\r\n            onChange={handleAccountChange}\r\n          />\r\n          \r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{accountError}</span>\r\n        <br></br><br></br>\r\n        <FormControl  style={{width:'48%'}} sx={{ m: 1 }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-amount\"\r\n            value={amount}\r\n            type=\"number\"\r\n            onChange={handleAmountChange}\r\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n          />\r\n          \r\n        </FormControl>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <FormControl style={{width:'48%'}} sx={{ m: 1 }} variant=\"standard\">\r\n          <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"Select type\"\r\n          value={type}\r\n          onChange={handleTypeChange}\r\n          helperText=\"Please select your mode of payment\"\r\n        >\r\n          {modeOfPay.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n          \r\n        </FormControl>\r\n        <br></br><br></br>\r\n\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Notes:\"\r\n          multiline\r\n          rows={4}\r\n          //defaultValue=\"Default Value\"\r\n           value={notes}\r\n          onChange={handleNotesChange}\r\n        /> </FormControl>\r\n      </CardContent>\r\n      <CardActions style={{justifyContent: 'center'}}>\r\n      <Button variant=\"contained\" style={{justifyContent:'center'}} onClick={sendMoney} color=\"primary\"  ><AttachMoneyIcon/>&nbsp;SEND MONEY</Button>\r\n      </CardActions>\r\n    </Card>\r\n    </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        </Grid>\r\n\r\n        <Snackbar\r\n       style={{whiteSpace: 'pre-wrap', width:'300px', top:'50%',bottom:'50%', left:'40%', right:'50%'}}\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\"\r\n        }}\r\n        open={openSnack}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n      />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/util/fetch.js",[],"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/common/header/Header.js",["90","91","92","93"],"import * as React from 'react';\r\nimport { Tab, Tabs } from '@material-ui/core';\r\nimport \"./Header.css\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport PropTypes from 'prop-types';\r\nimport AccountCircleIcon  from '@material-ui/icons/AccountCircle';\r\nimport image from '../../assets/logo.png';\r\nimport Login from '../../screens/login/Login';\r\nimport Register from '../../screens/register/Register';\r\nimport Home from \"../../screens/home/Home\";\r\nimport SendMoney from \"../../screens/SendMoney/sendMoney\";\r\n\r\nimport Profile from '../../screens/profile/Profile';\r\nimport ViewProfile from '../../screens/profile/ViewProfile';\r\nexport default function Header({ loginHandler }) {\r\n\r\n  //This js file is to design & api calls related to header section in ui screen\r\n\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isProfileOpen, setIsProfileOpen] = React.useState(false);\r\n  \r\n  const [value, setValue] = React.useState(1);\r\n  const [logButtonName, setlogButtonName] = React.useState(isUserSessionAlreadyExist());\r\n\r\n\r\n  //This function is to validate user session exists or not\r\n  function isUserSessionAlreadyExist() {\r\n    if (localStorage.getItem(\"username\") !== \"\" && localStorage.getItem(\"username\") !== undefined\r\n      && localStorage.getItem(\"username\") !== null) {\r\n      loginHandler(true);\r\n      return \"LOGOUT\";\r\n    } else {\r\n      loginHandler(false);\r\n      return \"LOGIN\";\r\n    }\r\n  }\r\n\r\n  function toggleModal() {\r\n    if (logButtonName === 'LOGOUT') {\r\n        localStorage.removeItem(\"username\");\r\n        localStorage.removeItem(\"email\");\r\n        localStorage.removeItem(\"id\");\r\n        setlogButtonName(\"LOGIN\");\r\n        window.location.replace(\"/\")\r\n    } else {\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n\r\n  function toggleProfileModal(){\r\n    setIsProfileOpen(!isProfileOpen);\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n\r\n\r\n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const BootstrapProfileDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n      minWidth:'500px'\r\n    },\r\n  }));\r\n\r\n  const BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props;\r\n    return (\r\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n        {children}\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={onClose}\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n    );\r\n  };\r\n\r\n  BootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n  return (\r\n    <Box sx={{ flexGrow: 1, display: \"flex\" }}>\r\n      <AppBar position=\"static\"  >\r\n        <Toolbar className=\"toolBar\" style={{backgroundColor: '#262673'}}>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <img src={image} className=\"img\" style={{height: '45px'}}/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" style={{color: 'orange', fontFamily:'cursive'}} >\r\n            Payments\r\n          </Typography>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <NavLink className=\"navbar-item\"  to=\"/home\"  style={{color:'white', textDecoration: 'none'}}>\r\n              HOME\r\n            </NavLink> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            {\r\n              (localStorage.getItem(\"username\") !== undefined && localStorage.getItem(\"username\") !== null && localStorage.getItem(\"username\").trim() !==\"\") ? (\r\n                <NavLink className=\"navbar-item\"  to=\"/feed\"  style={{color:'white', textDecoration: 'none'}}>\r\n                  PAYMENT HISTORY\r\n                </NavLink>\r\n              ) : \"\"\r\n            }\r\n             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            \r\n\r\n            {\r\n              (localStorage.getItem(\"username\") !== undefined && localStorage.getItem(\"username\") !== null && localStorage.getItem(\"username\").trim() !==\"\") ? (\r\n                <NavLink className=\"navbar-item\"  to=\"/sendMoney\" style={{color:'white', textDecoration: 'none'}}>\r\n                  SEND MONEY\r\n                </NavLink>\r\n              ) : \"\"\r\n            }\r\n            \r\n            <div style={{flex:'1'}}></div>\r\n\r\n          {\r\n          (localStorage.getItem(\"username\") !== undefined && localStorage.getItem(\"username\") !== null && localStorage.getItem(\"username\").trim() !==\"\") ? (\r\n            <div onClick={toggleProfileModal} style={{cursor:'pointer'}}><AccountCircleIcon  /><span> Hello {localStorage.getItem(\"username\")}!</span>&nbsp;&nbsp;</div>\r\n          ) : \"\"\r\n          }\r\n          \r\n          <Button variant=\"contained\" color=\"primary\" onClick={toggleModal} >{logButtonName}</Button>\r\n          <BootstrapDialog\r\n            onClose={toggleModal}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={isOpen}\r\n          >\r\n            <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={toggleModal} className=\"toolHeader\" style={{ textAlign: 'center', backgroundColor: '#262673', color: 'white' }}>\r\n              AUTHENTICATION\r\n            </BootstrapDialogTitle>\r\n\r\n            <TabContext value={value}>\r\n              <Tabs value={value} onChange={handleChange} style={{ textAlign: 'center' }}>\r\n                <Tab label=\"Login\" value={1} style={{ width: '200px' }} />\r\n                <Tab label=\"Register\" value={2} style={{ width: '200px' }} />\r\n              </Tabs>\r\n\r\n              <TabPanel value={1} index={0}>\r\n                <Login toggleModal={toggleModal} loginButton={setlogButtonName} />\r\n              </TabPanel>\r\n\r\n              <TabPanel value={2} index={1}>\r\n                <Register toggleModal={toggleModal} />\r\n              </TabPanel>\r\n\r\n            </TabContext>\r\n          </BootstrapDialog>\r\n\r\n          <BootstrapProfileDialog\r\n            onClose={toggleProfileModal}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={isProfileOpen}\r\n          >\r\n            <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={toggleProfileModal} className=\"toolHeader\" style={{ textAlign: 'center', backgroundColor: '#262673', color: 'white' }}>\r\n              PROFILE\r\n            </BootstrapDialogTitle>\r\n            <TabContext value={value}>\r\n              <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} style={{ textAlign: 'center' }}>\r\n                <Tab label=\"VIEW\" value={1}  />\r\n                <Tab label=\"EDIT\" value={2} />\r\n              </Tabs>\r\n\r\n              <TabPanel value={1} index={0}>\r\n                <ViewProfile toggleModal={toggleProfileModal} />\r\n              </TabPanel>\r\n\r\n              <TabPanel value={2} index={1}>\r\n                <Profile toggleModal={toggleProfileModal} />\r\n              </TabPanel>\r\n\r\n            </TabContext>\r\n           \r\n          </BootstrapProfileDialog>\r\n\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/login/Login.js",[],"/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/register/Register.js",["94","95","96","97","98","99"],"import {\r\n  FormControl, Grid, Input,\r\n  InputLabel, Snackbar\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport * as React from 'react';\r\nimport { registerUser } from '../../util/fetch';\r\n\r\nexport default function Register({ toggleModal }) {\r\n  //This js file is mainly to register users and it will take care all validations as well\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const [emailError, setEmailError] = React.useState('');\r\n  const [mobileError, setMobileError] = React.useState('');\r\n  const [cpasswordError, setcPasswordError] = React.useState('');\r\n  const [invalidError, setInvalidError] = React.useState('');\r\n  const [snackMessage, setSnackMessage] = React.useState('');\r\n  const passwordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  const cpasswordChange = (event) => {\r\n    setCPassword(event.target.value);\r\n  }\r\n\r\n  const emailChange = (event) => {\r\n    setEmail(event.target.value);\r\n    if (!ValidateEmail(event.target.value)) {\r\n      setEmailError('Enter valid Email!');\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n  }\r\n\r\n  const nameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n \r\n  const cnumberChange = (event) => {\r\n    setCnumber(event.target.value);\r\n    if (!phonenumber(event.target.value)) {\r\n      setMobileError('Enter valid Mobile!');\r\n    } else {\r\n      setMobileError('');\r\n    }\r\n  }\r\n\r\n  const anumberChange = (event) => {\r\n    setAnumber(event.target.value);\r\n    \r\n  }\r\n\r\n  const clickRegister = () => {\r\n    if (email === \"\" || email === undefined || password === \"\" || password === undefined ||\r\n      name === \"\" || name === undefined || cnumber === \"\"\r\n      || cnumber === undefined || anumber === \"\"\r\n      || anumber === undefined) {\r\n      setSnackMessage('Please fill out this field');\r\n      setOpenSnack(true);\r\n    } else if (!ValidateEmail(email) || !phonenumber(cnumber)) {\r\n      return false;\r\n    } else if (password != cpassword) {\r\n      setcPasswordError('Password mismatched!');\r\n      return false;\r\n    } else {\r\n      registerUser(name, email, password, cnumber, anumber).then(res => {\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setCPassword(\"\");\r\n        setCnumber(\"\");\r\n        setAnumber(\"\");\r\n        setSnackMessage('Registration success!, Please log in');\r\n        setOpenSnack(true);\r\n      })\r\n        .catch(error => {\r\n          console.log(\"Regiter failed\" + error);\r\n          setInvalidError('Registration Failed!');\r\n        })\r\n    }\r\n  }\r\n\r\n  function ValidateEmail(mail) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\r\n      return (true)\r\n    }\r\n    return (false)\r\n  }\r\n\r\n  function phonenumber(mobile) {\r\n    var phoneno = /^\\d{10}$/;\r\n    if (mobile.match(phoneno)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const [logButtonName, setlogButtonName] = React.useState(\"LOGIN\");\r\n\r\n  const handleSnackClose = () => {\r\n    setOpenSnack(!openSnack);\r\n  };\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [cpassword, setCPassword] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [cnumber, setCnumber] = React.useState(\"\");\r\n  const [anumber, setAnumber] = React.useState(\"\");\r\n  return (\r\n    <React.Fragment>\r\n      <DialogContent>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-fname\">Name</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-fname\"\r\n            type={'text'}\r\n            value={name}\r\n            onChange={nameChange}\r\n          />\r\n        </FormControl><br></br><br></br>\r\n        \r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-email\"\r\n            type={'text'}\r\n            value={email}\r\n            onChange={emailChange}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{emailError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={'password'}\r\n            value={password}\r\n            onChange={passwordChange}\r\n          />\r\n        </FormControl>\r\n        <br></br><br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Confirm Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={'password'}\r\n            value={cpassword}\r\n            onChange={cpasswordChange}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{cpasswordError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Contact Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={cnumber}\r\n            onChange={cnumberChange}\r\n          />\r\n        </FormControl><br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{mobileError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Account Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={anumber}\r\n            onChange={anumberChange}\r\n          />\r\n        </FormControl><br></br>\r\n      </DialogContent>\r\n      <DialogActions align='center'>\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={clickRegister} >REGISTER</Button>\r\n        </Grid>\r\n      </DialogActions>\r\n\r\n      <Snackbar\r\n       style={{whiteSpace: 'pre-wrap', width:'300px', top:'50%',bottom:'50%', left:'40%', right:'50%'}}\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\"\r\n        }}\r\n        open={openSnack}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/profile/Profile.js",["100","101","102","103","104","105","106"],"import {\r\n  FormControl, Grid, Input,\r\n  InputLabel, Snackbar\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport * as React from 'react';\r\nimport { registerUser } from '../../util/fetch';\r\nimport { getUser, editUsers } from '../../util/fetch';\r\nexport default function Profile({ toggleModal }) {\r\n\r\n  //This js file is to edit user data and also it have all email/mobilenumber/password validations\r\n\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const [emailError, setEmailError] = React.useState('');\r\n  const [mobileError, setMobileError] = React.useState('');\r\n  const [cpasswordError, setcPasswordError] = React.useState('');\r\n  const [invalidError, setInvalidError] = React.useState('');\r\n  const [snackMessage, setSnackMessage] = React.useState('');\r\n  const passwordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  const cpasswordChange = (event) => {\r\n    setCPassword(event.target.value);\r\n  }\r\n\r\n  const emailChange = (event) => {\r\n    setEmail(event.target.value);\r\n    if (!ValidateEmail(event.target.value)) {\r\n      setEmailError('Enter valid Email!');\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n  }\r\n\r\n  const nameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n \r\n  const cnumberChange = (event) => {\r\n    setCnumber(event.target.value);\r\n    if (!phonenumber(event.target.value)) {\r\n      setMobileError('Enter valid Mobile!');\r\n    } else {\r\n      setMobileError('');\r\n    }\r\n  }\r\n\r\n  const anumberChange = (event) => {\r\n    setAnumber(event.target.value);\r\n    \r\n  }\r\n\r\n  //Whenever user clicked profile, below useEffect will trigger to fetch user data \r\n  React.useEffect(() => {\r\n    getUser( localStorage.getItem(\"username\"), localStorage.getItem(\"email\")).then(resp => {\r\n      resp.json().then(data => {\r\n        console.log(data);\r\n        setEmail(data.username);\r\n        setName(data.name);\r\n        setCnumber(data.cnumber);\r\n        setAnumber(data.accNo);\r\n        setPassword(data.password);\r\n        setCPassword(data.password);\r\n        console.log(data);\r\n      });\r\n    }).catch(error => {\r\n      console.log(\"login user err \" + error);\r\n    });\r\n  }, []);\r\n\r\n  //Whenever user clicked edit & save, below editUser will trigger to save edited user data\r\n  const editUser = () => {\r\n    if (email === \"\" || email === undefined || password === \"\" || password === undefined ||\r\n      name === \"\" || name === undefined || cnumber === \"\"\r\n      || cnumber === undefined || anumber === \"\"\r\n      || anumber === undefined) {\r\n      setSnackMessage('Please fill out this field');\r\n      setOpenSnack(true);\r\n    } else if (!ValidateEmail(email) || !phonenumber(cnumber)) {\r\n      return false;\r\n    } else if (password != cpassword) {\r\n      setcPasswordError('Password mismatched!');\r\n      return false;\r\n    } else {\r\n      editUsers(name, email, password, cnumber, anumber).then(res => {\r\n        setSnackMessage('User updated successfully');\r\n        setOpenSnack(true);\r\n        localStorage.setItem(\"email\", email);\r\n        localStorage.setItem(\"username\", name);\r\n      })\r\n        .catch(error => {\r\n          console.log(\"User update failed\" + error);\r\n          setInvalidError('User update Failed!');\r\n        })\r\n    }\r\n  }\r\n\r\n  function ValidateEmail(mail) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\r\n      return (true)\r\n    }\r\n    return (false)\r\n  }\r\n\r\n  function phonenumber(mobile) {\r\n    var phoneno = /^\\d{10}$/;\r\n    if (mobile.match(phoneno)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const [logButtonName, setlogButtonName] = React.useState(\"LOGIN\");\r\n\r\n  const handleSnackClose = () => {\r\n    setOpenSnack(!openSnack);\r\n  };\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [cpassword, setCPassword] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [cnumber, setCnumber] = React.useState(\"\");\r\n  const [anumber, setAnumber] = React.useState(\"\");\r\n  return (\r\n    <React.Fragment>\r\n      <DialogContent>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-fname\">Name</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-fname\"\r\n            type={'text'}\r\n            value={name}\r\n            defaultValue={name}\r\n            onChange={nameChange}\r\n          />\r\n        </FormControl><br></br><br></br>\r\n        \r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-email\"\r\n            type={'text'}\r\n            value={email}\r\n            defaultValue={email}\r\n            onChange={emailChange}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{emailError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={'password'}\r\n            value={password}\r\n            defaultValue={password}\r\n            onChange={passwordChange}\r\n          />\r\n        </FormControl>\r\n        <br></br><br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Confirm Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={'password'}\r\n            value={cpassword}\r\n            defaultValue={cpassword}\r\n            onChange={cpasswordChange}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{cpasswordError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Contact Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={cnumber}\r\n            defaultValue={cnumber}\r\n            onChange={cnumberChange}\r\n          />\r\n        </FormControl><br></br>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{mobileError}</span>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Account Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={anumber}\r\n            defaultValue={anumber}\r\n            onChange={anumberChange}\r\n          />\r\n        </FormControl><br></br>\r\n      </DialogContent>\r\n      <DialogActions align='center'>\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={editUser} >SAVE</Button>\r\n        </Grid>\r\n      </DialogActions>\r\n\r\n      <Snackbar\r\n       style={{whiteSpace: 'pre-wrap', width:'300px', top:'50%',bottom:'50%', left:'40%', right:'50%'}}\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\"\r\n        }}\r\n        open={openSnack}\r\n        onClose={handleSnackClose}\r\n        message={snackMessage}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}","/Users/manish/Desktop/Project413/Payment-BK_FE-2/Payment-UI/src/screens/profile/ViewProfile.js",["107","108","109","110","111","112"],"import {\r\n  FormControl, Grid, Input,\r\n  InputLabel, Snackbar\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport * as React from 'react';\r\nimport { getUser } from '../../util/fetch';\r\nimport { registerUser } from '../../util/fetch';\r\n\r\nexport default function ViewProfile({ toggleModal }) {\r\n  //This js is to fetch user details, for only view purpose\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [cnumber, setCnumber] = React.useState(\"\");\r\n  const [anumber, setAnumber] = React.useState(\"\");\r\n\r\n  const emailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  const nameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n \r\n  const cnumberChange = (event) => {\r\n    setCnumber(event.target.value);\r\n  }\r\n\r\n  const anumberChange = (event) => {\r\n    setAnumber(event.target.value);\r\n    \r\n  }\r\n  React.useEffect(() => {\r\n  getUser( localStorage.getItem(\"username\"), localStorage.getItem(\"email\")).then(resp => {\r\n    resp.json().then(data => {\r\n      console.log(data);\r\n      setEmail(data.username);\r\n      setName(data.name);\r\n      setCnumber(data.cnumber);\r\n      setAnumber(data.accNo);\r\n      console.log(data);\r\n    });\r\n  }).catch(error => {\r\n    console.log(\"login user err \" + error);\r\n  });\r\n}, []);\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DialogContent>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-fname\">Name</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-fname\"\r\n            type={'text'}\r\n            value={name}\r\n            disabled={true}\r\n          />\r\n        </FormControl><br></br><br></br>\r\n        \r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-email\"\r\n            type={'text'}\r\n            value={email}\r\n            disabled={true}\r\n          />\r\n        </FormControl>\r\n        <br></br>\r\n        <br></br>\r\n        \r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Contact Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={cnumber}\r\n            disabled={true}\r\n          />\r\n        </FormControl><br></br>\r\n        <br></br>\r\n        <FormControl required={true} fullWidth sx={{ m: 1 }} variant=\"standard\" style={{ textAlign: 'center' }}>\r\n          <InputLabel htmlFor=\"standard-adornment-cnumber\">Account Number</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-cnumber\"\r\n            type={'text'}\r\n            value={anumber}\r\n            disabled={true}\r\n          />\r\n        </FormControl><br></br>\r\n      </DialogContent>\r\n      <DialogActions align='center'>\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={toggleModal} >CLOSE</Button>\r\n        </Grid>\r\n      </DialogActions>\r\n\r\n    </React.Fragment>\r\n  );\r\n}",{"ruleId":"113","severity":1,"message":"114","line":1,"column":52,"nodeType":"115","messageId":"116","endLine":1,"endColumn":63},{"ruleId":"113","severity":1,"message":"117","line":1,"column":64,"nodeType":"115","messageId":"116","endLine":1,"endColumn":74},{"ruleId":"113","severity":1,"message":"118","line":1,"column":76,"nodeType":"115","messageId":"116","endLine":1,"endColumn":82},{"ruleId":"113","severity":1,"message":"119","line":1,"column":90,"nodeType":"115","messageId":"116","endLine":1,"endColumn":101},{"ruleId":"113","severity":1,"message":"120","line":1,"column":103,"nodeType":"115","messageId":"116","endLine":1,"endColumn":108},{"ruleId":"113","severity":1,"message":"121","line":2,"column":3,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"122","line":2,"column":15,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"123","line":2,"column":38,"nodeType":"115","messageId":"116","endLine":2,"endColumn":52},{"ruleId":"113","severity":1,"message":"124","line":2,"column":54,"nodeType":"115","messageId":"116","endLine":2,"endColumn":62},{"ruleId":"113","severity":1,"message":"125","line":2,"column":64,"nodeType":"115","messageId":"116","endLine":2,"endColumn":72},{"ruleId":"113","severity":1,"message":"126","line":19,"column":10,"nodeType":"115","messageId":"116","endLine":19,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":29,"column":7,"nodeType":"129","endLine":29,"endColumn":8},{"ruleId":"130","severity":1,"message":"131","line":125,"column":7,"nodeType":"132","endLine":125,"endColumn":70},{"ruleId":"113","severity":1,"message":"133","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"113","severity":1,"message":"134","line":1,"column":15,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"113","severity":1,"message":"135","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"136","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"137","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"138","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":21},{"ruleId":"113","severity":1,"message":"139","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"126","line":20,"column":10,"nodeType":"115","messageId":"116","endLine":20,"endColumn":20},{"ruleId":"113","severity":1,"message":"140","line":37,"column":9,"nodeType":"115","messageId":"116","endLine":37,"endColumn":21},{"ruleId":"113","severity":1,"message":"133","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"113","severity":1,"message":"134","line":1,"column":15,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"113","severity":1,"message":"141","line":1,"column":40,"nodeType":"115","messageId":"116","endLine":1,"endColumn":50},{"ruleId":"113","severity":1,"message":"135","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":18},{"ruleId":"113","severity":1,"message":"136","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":16},{"ruleId":"113","severity":1,"message":"142","line":13,"column":17,"nodeType":"115","messageId":"116","endLine":13,"endColumn":25},{"ruleId":"113","severity":1,"message":"126","line":14,"column":10,"nodeType":"115","messageId":"116","endLine":14,"endColumn":20},{"ruleId":"113","severity":1,"message":"143","line":18,"column":10,"nodeType":"115","messageId":"116","endLine":18,"endColumn":15},{"ruleId":"113","severity":1,"message":"144","line":19,"column":10,"nodeType":"115","messageId":"116","endLine":19,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":37,"column":20,"nodeType":"147","messageId":"148","endLine":37,"endColumn":22},{"ruleId":"113","severity":1,"message":"149","line":63,"column":9,"nodeType":"115","messageId":"116","endLine":63,"endColumn":25},{"ruleId":"113","severity":1,"message":"124","line":15,"column":8,"nodeType":"115","messageId":"116","endLine":15,"endColumn":16},{"ruleId":"113","severity":1,"message":"150","line":24,"column":8,"nodeType":"115","messageId":"116","endLine":24,"endColumn":12},{"ruleId":"113","severity":1,"message":"151","line":25,"column":8,"nodeType":"115","messageId":"116","endLine":25,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":131,"column":13,"nodeType":"132","endLine":131,"endColumn":72},{"ruleId":"113","severity":1,"message":"152","line":17,"column":10,"nodeType":"115","messageId":"116","endLine":17,"endColumn":22},{"ruleId":"153","severity":1,"message":"154","line":63,"column":25,"nodeType":"155","messageId":"156","endLine":63,"endColumn":27},{"ruleId":"157","severity":1,"message":"158","line":85,"column":16,"nodeType":"129","messageId":"159","endLine":85,"endColumn":17,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"158","line":85,"column":32,"nodeType":"129","messageId":"159","endLine":85,"endColumn":33,"suggestions":"161"},{"ruleId":"113","severity":1,"message":"162","line":101,"column":10,"nodeType":"115","messageId":"116","endLine":101,"endColumn":23},{"ruleId":"113","severity":1,"message":"163","line":101,"column":25,"nodeType":"115","messageId":"116","endLine":101,"endColumn":41},{"ruleId":"113","severity":1,"message":"164","line":9,"column":10,"nodeType":"115","messageId":"116","endLine":9,"endColumn":22},{"ruleId":"113","severity":1,"message":"152","line":19,"column":10,"nodeType":"115","messageId":"116","endLine":19,"endColumn":22},{"ruleId":"153","severity":1,"message":"154","line":84,"column":25,"nodeType":"155","messageId":"156","endLine":84,"endColumn":27},{"ruleId":"157","severity":1,"message":"158","line":102,"column":16,"nodeType":"129","messageId":"159","endLine":102,"endColumn":17,"suggestions":"165"},{"ruleId":"157","severity":1,"message":"158","line":102,"column":32,"nodeType":"129","messageId":"159","endLine":102,"endColumn":33,"suggestions":"166"},{"ruleId":"113","severity":1,"message":"162","line":118,"column":10,"nodeType":"115","messageId":"116","endLine":118,"endColumn":23},{"ruleId":"113","severity":1,"message":"163","line":118,"column":25,"nodeType":"115","messageId":"116","endLine":118,"endColumn":41},{"ruleId":"113","severity":1,"message":"125","line":3,"column":15,"nodeType":"115","messageId":"116","endLine":3,"endColumn":23},{"ruleId":"113","severity":1,"message":"164","line":10,"column":10,"nodeType":"115","messageId":"116","endLine":10,"endColumn":22},{"ruleId":"113","severity":1,"message":"167","line":20,"column":9,"nodeType":"115","messageId":"116","endLine":20,"endColumn":20},{"ruleId":"113","severity":1,"message":"168","line":24,"column":9,"nodeType":"115","messageId":"116","endLine":24,"endColumn":19},{"ruleId":"113","severity":1,"message":"169","line":28,"column":9,"nodeType":"115","messageId":"116","endLine":28,"endColumn":22},{"ruleId":"113","severity":1,"message":"170","line":32,"column":9,"nodeType":"115","messageId":"116","endLine":32,"endColumn":22},"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'CardHeader' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'MenuItem' is defined but never used.","'Snackbar' is defined but never used.","'isLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabContext' is defined but never used.","'TabPanel' is defined but never used.","'Link' is defined but never used.","'AccessAlarm' is defined but never used.","'AccessTime' is defined but never used.","'handleChange' is assigned a value but never used.","'Typography' is defined but never used.","'setValue' is assigned a value but never used.","'users' is assigned a value but never used.","'user' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleUserChange' is assigned a value but never used.","'Home' is defined but never used.","'SendMoney' is defined but never used.","'invalidError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["171","172"],["173","174"],"'logButtonName' is assigned a value but never used.","'setlogButtonName' is assigned a value but never used.","'registerUser' is defined but never used.",["175","176"],["177","178"],"'emailChange' is assigned a value but never used.","'nameChange' is assigned a value but never used.","'cnumberChange' is assigned a value but never used.","'anumberChange' is assigned a value but never used.",{"messageId":"179","fix":"180","desc":"181"},{"messageId":"182","fix":"183","desc":"184"},{"messageId":"179","fix":"185","desc":"181"},{"messageId":"182","fix":"186","desc":"184"},{"messageId":"179","fix":"187","desc":"181"},{"messageId":"182","fix":"188","desc":"184"},{"messageId":"179","fix":"189","desc":"181"},{"messageId":"182","fix":"190","desc":"184"},"removeEscape",{"range":"191","text":"192"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"193","text":"194"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"195","text":"192"},{"range":"196","text":"194"},{"range":"197","text":"192"},{"range":"198","text":"194"},{"range":"199","text":"192"},{"range":"200","text":"194"},[2735,2736],"",[2735,2735],"\\",[2751,2752],[2751,2751],[3432,3433],[3432,3432],[3448,3449],[3448,3448]]